{"version":3,"sources":["Components/Header.jsx","Context/AppReducer.jsx","Context/GlobalState.jsx","Components/Balance.jsx","Components/IncomeExpenses.jsx","Components/Transaction.jsx","Components/TransactionList.jsx","Components/AddTransaction.jsx","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","name","Math","abs","onClick","TransactionList","AddTransaction","useState","text","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.071f47c4.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n","export default (state, action) => {\n  switch (action.type) {\n    case 'DELETE_TRANSACTION' :\n      return {\n        ...state,\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n      }\n    case 'ADD_TRANSACTION' :\n        return {\n          ...state,\n          transactions: [ action.payload, ...state.transactions ]\n        }\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// Initial state\nconst initialState = {\n  transactions: [],\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  //Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id,\n    });\n  }\n\n  //Actions\n  function addTransaction(transaction) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction,\n    });\n  }\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../Context/GlobalState\";\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n  return (\n    <div>\n      <h4>Your Balance</h4>\n      <h1 id=\"balance\">{total}</h1>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../Context/GlobalState\";\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n  const expense = amounts\n    .filter((item) => item < 0)\n    .reduce((acc, item) => (acc += item), 0) * -1\n    .toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p id=\"money-plus\" className=\"money plus\">\n          {income}\n        </p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p id=\"money-minus\" className=\"money minus\">\n          {expense}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../Context/GlobalState\";\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n  return (\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n      {transaction.name}\n      <span>\n        {sign}$({Math.abs(transaction.amount)})\n      </span>\n       <button onClick={() =>  deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\n    </li>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../Context/GlobalState\";\nimport { Transaction } from \"./Transaction\";\n\nexport const TransactionList = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <div>\n      <h3>History</h3>\n      <ul id=\"list\" className=\"list\">\n        {transactions.map((transaction) => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../Context/GlobalState\";\n\nexport const AddTransaction = () => {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      name:text,\n      amount:+amount,\n    };\n\n    addTransaction(newTransaction);\n  };\n  return (\n    <div>\n      <h3>Add new Transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter Text...\"\n          ></input>\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount<br></br>\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          ></input>\n        </div>\n        <button className=\"btn\">Add Transaction</button>\n      </form>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Header } from \"./Components/Header\";\nimport { Balance } from \"./Components/Balance\";\n\nimport \"./App.css\";\nimport { IncomeExpenses } from \"./Components/IncomeExpenses\";\nimport { TransactionList } from \"./Components/TransactionList\";\nimport { AddTransaction } from \"./Components/AddTransaction\";\nimport { GlobalProvider } from \"./Context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n      </div>\n      <IncomeExpenses />\n      <TransactionList />\n      <AddTransaction />\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}